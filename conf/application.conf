# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = essttp-backend

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# crypto module
play.modules.enabled += "essttp.module.CryptoModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes



bars {
  verify {
    repoTtl = 24hours
    maxAttempts = 3
  }
}

journey.repoTtl = 30minutes
journey-by-tax-id.repoTtl = 60minutes

mongodb {
  uri = "mongodb://localhost:27017/essttp-backend"
}


microservice {

  services {
    auth {
      host = localhost
      port = 8500
    }

    date-calculator {
      host = localhost
      port = 8762
    }

    pega {
      host = localhost
      port = 9218
    }

  }

}

crypto {
  # must be the same as the encryption key configured in the essttp-frontend service for them
  # to work together properly
  encryption-key = "P5xsJ9Nt+quxGZzB4DeLfw=="
}

nextUrlHost = "http://localhost:9215"

affordability {

  # which tax regimes the affordability journey is enabled for, e.g. vat, epaye, sa
  # SIMP will not have affordability enabled. DO NOT include SIMP in the list
  tax-regimes = [ "sa" ]

  # when affordability is enabled for a tax regime, what percentage of users under each regime
  # should actually be able to pass through to the affordability journey? This is to be able to
  # roll out affordability gradually to users as in a private beta.
  #
  # Percentages should be expressed as an integer from 0 to 100
  pass-through-percentages {
    epaye = 100
    vat = 100
    sa = 100
    simp = 100
  }

}

pega {
  oauth {
    username = "user"
    password = "pass"
  }
}